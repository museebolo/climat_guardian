# Use postgres/example user/password credentials
version: '3.9'
services:

  esphome:
    image: esphome/esphome:2024.4
    volumes:
      - ./esp32/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /dev/ttyUSB0:/dev/ttyUSB0
    privileged: true

  db:
    image: postgres:12.19-alpine
    shm_size: 128mb
    volumes:
      - "./database/data:/var/lib/postgresql/data"
      - "./database/db.sql:/docker-entrypoint-initdb.d/db.sql"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: memoires-info
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d memoires-info"]
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    build:
      context: .
      dockerfile: Dockerfile.Sqitch
    image: sqitch-memoires-info
    environment:
      SQITCH_TARGET: "db:pg://postgres:${POSTGRES_PASSWORD}@db:5432/memoires-info"
    volumes:
      - "./database/migration:/repo"
    depends_on:
      db:
        condition: service_healthy

  adminer:
    image: adminer
    depends_on:
      - db

  postg-rest:
    image: postgrest/postgrest:v12.0.3
    environment:
      PGRST_JWT_SECRET: "${JWT_SECRET}"
      PGRST_DB_URI: "postgres://postgres:${POSTGRES_PASSWORD}@db:5432/memoires-info"
      PGRST_DB_ANO: role = "web_anon"
      PGRST_DB_SCHEMAS: "api"
      PGRST_OPENAPI_SERVE: proxy-uri = "http://0.0.0.0:3000"
    depends_on:
      migration:
        condition: service_completed_successfully

  php:
    image: php:8.3-fpm-alpine
    volumes:
      - ./login:/var/www/memoires-info/php
    depends_on:
      - postg-rest

  web:
    image: nginx:1.26-alpine-otel
    ports:
      - '80:80'
    volumes:
      - ./Interface/dist:/var/www/memoires-info/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./login:/var/www/memoires-info/php
    depends_on:
      - php
      - postg-rest
      - adminer
      - esphome

