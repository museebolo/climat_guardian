# Use postgres/example user/password credentials
version: "3.9"
services:
  esphome:
    image: esphome/esphome:2024.4
    volumes:
      - "${ESP_PATH}:/config"
      - /etc/localtime:/etc/localtime:ro
      - /dev/ttyUSB0:/dev/ttyUSB0
    privileged: true

  db:
    image: postgres:16.3-alpine
    shm_size: 128mb
    volumes:
      - "${DB_PATH}:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: memoires-info
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d memoires-info"]
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    build:
      context: .
      dockerfile: Dockerfile/Dockerfile.Sqitch
    image: sqitch-memoires-info
    environment:
      SQITCH_TARGET: "db:pg://postgres:${POSTGRES_PASSWORD}@db:5432/memoires-info"
    depends_on:
      db:
        condition: service_healthy

  postg-rest:
    image: postgrest/postgrest:v12.0.3
    environment:
      PGRST_JWT_SECRET: "${JWT_SECRET}"
      PGRST_DB_URI: "postgres://postgres:${POSTGRES_PASSWORD}@db:5432/memoires-info"
      PGRST_DB_ANO: role = "web_anon"
      PGRST_DB_SCHEMAS: "api"
      PGRST_OPENAPI_SERVE: proxy-uri = "http://0.0.0.0:3000"
    depends_on:
      migration:
        condition: service_completed_successfully

  php:
    build:
      context: .
      dockerfile: Dockerfile/Dockerfile.Php
    image: php-memoires-info
    depends_on:
      - postg-rest

  interface:
    build:
      context: .
      dockerfile: Dockerfile/Dockerfile.Node
    image: interface-memoires-info

  web:
    build:
      context: .
      dockerfile: Dockerfile/Dockerfile.Nginx
    image: nginx-memoires-info
    ports:
      - "80:80"
    depends_on:
      - php
      - postg-rest
      - esphome
      - interface
